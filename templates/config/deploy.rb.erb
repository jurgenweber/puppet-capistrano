#capistrano 3 deploy script
#https://github.com/capistrano/capistrano

#some tests to ensure we have everything correct
abort("wrong user, needs to be <%= @deploy_user %>") if ENV['USER'] != '<%= @deploy_user %>'

#variables:
set :branch, ENV['branch'] || "master"
set :log_level, ENV['loglevel'] || "info"

# Deployment server info
set :application, "<%= @app_name %>"
set :deploy_to, "<%= @app_path %>"
set :tmp_dir, "<%= @app_path %>/shared/tmp"
local_user = Etc.getlogin

# SCM info
#custom hostname in ssh/config file to use another ssh key
set :scm,         :<%= @scm %>
set :repo_url,    "git@<%= @app_name %>_<%= @repo_address %>:<%= @app_name %>.git"

# General config stuff
set :keep_releases, <%= @keep_releases %>   #because of a bug with this feature just running it manulally, below in the deploy 'after' namespace
<% if @linked_files != [] -%>
set :linked_files,      [ <% @linked_files.each do |file| -%>"<%= file %>",<% end -%> ] 
<% end -%>
<% if @linked_dirs != [] -%>
set :linked_dirs,       [ <% @linked_dirs.each do |dir| -%>"<%= dir %>",<% end -%> ]
<% end -%>
set :permission_method, :acl

# Confirmations will not be requested from the command line.
set :interactive_mode, false
<% if @copy_exclude != [] -%>
set :copy_exclude, [ <% @copy_exclude.each do |path| -%>"<%= path %>",<% end -%> ]
<% end -%>

# User details for the production server
set :use_sudo, false
set :ssh_options, {
  forward_agent: true,
  user: '<%= @deploy_user %>'
}

namespace :<%= @app_name %> do
  task :start do
    run_locally do
      tag_name = capture("git ls-remote #{fetch :repo_url} | grep #{fetch :branch} | grep -v HEAD | rev | cut -d '/' -f1 | rev")
      set :tag_name, tag_name
    end

    time_start = Time.now
    set :time_start, time_start
    puts "deploy starting at #{time_start} by #{local_user} for #{fetch :country_id} #{fetch :stage} at #{fetch :tag_name} (#{fetch :branch})"
  end

  namespace :notify do
    desc 'notification tasks'

    desc 'notify newrelic'
    task :send_newrelic_message do
        execute :"curl --silent --show-error --output /dev/null \
          -H \"x-api-key:<%= @newrelic_api_key %>\" \
          -d \"deployment[<%= @app_name %>]=#{country_domain_front}\" \
          -d \"deployment[revision]=#{fetch :tag_name} (#{fetch :current_revision})\" \
          -d \"deployment[description]=#{fetch :branch}\" \
          -d \"deployment[user]=#{local_user}\" \
          \"https://rpm.newrelic.com/deployments.xml\""
    end
  end

  task :finish do
    time_finish = Time.now
    total_deploy_time = time_finish.to_i - fetch(:time_start).to_i
    set :total_deploy_time, total_deploy_time

    puts "deploy completed at #{time_finish} successfully by #{local_user} for #{fetch :country_id} #{fetch :stage} at #{fetch :tag_name} (#{fetch :current_revision}). The total time taken was #{total_deploy_time} seconds."
    puts ""
  end
end

before :deploy, '<%= @app_name %>:start'

namespace :deploy do
  after :finishing, 'deploy:cleanup'             #clean up old releases

  after :finishing, '<%= @app_name %>:notify:send_newrelic_message'

  task :failed do
    invoke '<%= @app_name %>:notify:send_skype_message_failed'

    puts "deploy failed by #{local_user} for #{fetch :country_id} #{fetch :rails_env} #{fetch :tag_name} #{fetch :current_revision}"
  end
end

#the last message on the console
after :deploy, '<%= @app_name %>:finish'
